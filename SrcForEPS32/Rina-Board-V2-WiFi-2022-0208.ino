#include <FastLED.h>
#include <WiFi.h>

//WiFi設定
const char* ssid     = "XXXXX"; 
//const char* ssid     = "XXXXX";
//const char* password = "YYYYY";

//LED設定
#define NUM_LEDS 256
#define DATA_PIN 5
#define PT_NUM 34

int led_mode = 1;//LEDの動作モード（0:手動,1:璃奈＋ボードオート,2:全種オート）
int led_pt = 4;//選択中のLEDパターン


CRGB leds[NUM_LEDS];
CRGB ledColor = CRGB(15, 0, 8);
CRGB ledWhite = CRGB(0, 0, 0);
CRGB led_0 = CRGB(255, 255, 255); //0 white #ffffff rgb(255,255,255)
CRGB led_1 = CRGB(255, 165, 0); //1 orange  #FFA500 rgb(255,165,0)
CRGB led_2 = CRGB(255, 0, 0); //2 red   #ff0000 rgb(255,0,0)
CRGB led_3 = CRGB(0, 128, 0); //3 green #008000 rgb(0,128,0)
CRGB led_4 = CRGB(0, 255, 0); //4 lime  #00ff00 rgb(0,255,0)
CRGB led_5 = CRGB(0, 0, 255); //5 blue  #0000ff rgb(0,0,255)
CRGB led_6 = CRGB(255, 255, 0); //6 yellow #ffff00 rgb(255,255,0)
CRGB led_7 = CRGB(128, 128, 128); //7 gray #808080 rgb(128,128,128)
CRGB led_8 = CRGB(255, 193, 181); //(128,128,128); //8 肌色 moccasin #FFE4B5 rgb(255,228,181)
CRGB led_9 = CRGB(0, 0, 0); //9 black #000000 rgb(0,0,0)
CRGB led_A = CRGB(255, 0, 125); //A 薄いピンク
CRGB led_B = CRGB(255, 0, 255); //B fuchsia #ff00ff rgb(255,0,255)
CRGB led_C = CRGB(102, 51, 0); //CRGB(198,159,119); //C 茶色
CRGB led_D = CRGB(43, 0, 128); //D 濃い青
CRGB led_E = CRGB(50, 50, 50); //E 濃いgray
CRGB led_F = CRGB(165, 42, 42); //F brown #a52a2a rgb(165, 42, 42)
CRGB led_G = CRGB(250, 250, 210); //G lightgoldenrodyellow #fafad2 rgb(250, 250, 210)

char data[PT_NUM][300] = {
  //璃奈
    "44444AAAA444444444494AAAA4449944449AAAAA0A0A9444444A0AAAAAA094444AAAA7AAAAAAAA444A7A55AAA55AAAA4AAAA500555005AA4AA50A0000A0A57AAAA9500A0000A05A44A50A0000A00509AAA950000000005444A5000A0A00057AA4AAA5000A00057AAAAA7555555577AA4AA4588766678854A445585565585544A"
    ,

    "44444AAAA444444444494AAAA4449944449AAAAA0A0A9444444A0AAAAAA094444AAAA7AAAAAAAA444A7A55AAA55AAAA4AAAA500555005AA4AA50A0000A0A57AAAA9500A000A005A44A50A0000A00509AAA950000000005444A5000A0A00057AA4AAA5000A00057AAAAA7555555577AA4AA4588766678854A445585565585544A"
    ,
    "55555AAAA55555555555AAAAA55555555555AAAA0A0AA555555A0AAAAAA0A55555A227AAAAAAAA555A7AAAAAAAA66AA55A0AA8A8A8A8AAA5AAA888888888AAAAAAA8899889988AA55AA8909889098AAA5AA8899889988A5A55A8888888888AA5A5AA88288288AAA55AABB8822888BA555A5500888800555A555000B66B00055A"
    ,
    "55555AAAA55555555555AAAAA55555555555AAAA0A0AA555555A0AAAAAA0A55555A227AAAAAAAA555A7AAAAAAAA66AA55A0AA8A8A8A8AAA5AAA888888888AAAAAAA8899889988AA55AA8909889098AAA5AA8899889988A5A55A8888888888AA5A5AA88288288AAA55AABB8822888BA555A5500888800555A555000B66B00055A"
  //以下ボード
  ,//d1:4
  "9999999999999999999999999999999999999999999999999AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA9999999999999999999999999999999999999999999999999999A99999999A9999999A999999A999999999AAAAAA9999999999999999999999999999999999999"
  ,//d2
  "9999999999999999999999999999999999999999999999999AA9999999999AA9999AA999999AA99999999A9999A99999999AA999999AA9999AA9999999999AA9999999999999999999999999999999999A9A99999999A9A999999999999999999999A999999A999999999AAAAAA999999999999999999999999999999999999"
  ,//d3
  "9999999999999999999999999999999999999999999999999AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA99999999999999999999999999999999999999999999999999999999AA9999999999999A99A999999999999A99A9999999999999AA99999999999999999999999"
  ,//d4
  "99999999999999999999999999999999A99999999999999A9AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA9999999999999999999999999999999999999999999999999999A99999999A9999999A999999A999999999AAAAAA9999999999999999999999999999999999999"
  ,//d5
  "9999999999999999999999999999999999999999999999999AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA99AA9999999999AA9999999999999999999999999999999999999999999999999999999AAAA99999999999A9999A9999999999A9999A99999999999A99A9999999999999AA9999999"
  ,//d6
  "999999999999999999999999999999999999999999999999999AA9999999A999999A999999A99A9999A99A999999A999999A9999999A9999999A99999999A9999999999999999999999A99999999A999999999999999999999999999999999999999A999999A999999999AAAAAA999999999999999999999999999999999999"
  ,//d7
  "9999999999999999999999999999999999999999999999999AA9999999999AA9999AA999999AA99999999A9999A99999999AA999999AA9999AA9999999999AA9999999999999999999999999999999999A9A99999999A9A999999AAAAAA9999999999A9999A9999999999A9999A99999999999A99A9999999999999AA9999999"
  ,//d8
  "99999999999999999999999999999999999999999999999999AA99999999AA999A9AA999999A9AA99AAAA999999AAAA99A9A99999999AA999999999999999A9A9A999999999999999999999999999999999999999999999999999AAAAAA999999999A999999A999999999999999999999999999999999999999999999999999"
  ,//d9
  "999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999A99999999999999A9AAAA999999AAAA999999999999999999A9A99999999A9A9A9A9999999999A9A99999AAAAAA9999999999A9999A9999999999A9999A99999999999A99A9999999999999AA9999999"
  ,//d10
  "999999999999999999999999999999999999999999999999AA999999999999AA99AA99999999AA999999A999999A999999AA99999999AA99AA999999999999AA999999999999999999999999999999999A9A99999999A9A9A9A9999999999A9A9999A999999A999999999AAAAAA999999999999999999999999999999999999"
  ,//d11
  "999999999999999999999999999999999999999999999999AA999999999999AA99AA99999999AA999999A999999A999999AA99999999AA99AA999999999999AA999999999999999999A9A999999A9A999A9A99999999A9A999999AAAAAA9999999999A9999A9999999999A9999A99999999999A99A9999999999999AA9999999"
  ,//d12
  "999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999A99999999999999A9AAAA999999AAAA999999999999999999999999999999999999999999999999999999999999999999999A999999A999999999A9999A99999999999AAAA999999999999999999999"
  ,//d13
  "999999999999999999999999999999999999999999999999999999999999999999999999999999999Aa9999999999AA99AAAA999999aAAA999AA99999999AA9999999999999999999999999999999999A9A9999999999A9A99999AAAAAA9999999999A9999A9999999999A9999A99999999999A99A9999999999999AA9999999"
  // すみれ 17
  , "4444466664444444444446622226644444666666626644444446626666C6666446666666666266444462666668686C644666888688662646666668899889986466909889098666C6C666688998899846648888888888C666666668882882886444688228888D66C6466DDD88888884644444D0000DDDDD644DDDDDDDD22D4444"
  , "4444466664444444444446622226644444666666626644444446626666C6666446666666666266444462666668686C644666888688662646666668899888986466989889098666C6C666688998888846648888888888C686886668882882886444688228888D6886400DDD88888884644444D0000DDDDDD44DDDDDDDD22D4444"
  , "B666B6B66B66BBB6B666B6B66B6BB6BBB6B6B6B66B66666B6BBB66B66B6B666BB666B6B66B6B6666B666B6B66B6B666BB666B6BBBB66BBB666666666666666666BBBB66BBB66BBB666B666B66B6B66666666B6B66B666B6666B666BBB66BBBB66666B66B6B666B6666B666B66B6B66666BBBB6B66B66BBB66666666666666666"
  , "4446666666666466664666666666466446644644466444446646644444446646646644444444646666644444444664666446644444444666664444444466444664446664444444666644444466644446664464666444466666444666646664666644644446666446466666444444464644466444464446644446666666666646"
  
  //ルビィ 21->22
  
   , "66666BBBBBB666666BB6BB0BBBBB6BB6BBBBB0BBBBBBBBBBBB0BBBBBBBBBB0BBBBBBBB8BBB8BBBBBB6BB88BBB8B8BB6BB6B88888B888BB6BB6B8878888788B6BB6B8888888888B6B66B8888888888B6B66B8877887788B66666B8GG88GG8B666666BGGG22GGGB666666GGG8888GGG66666GGGG7777GGGG6666GGGGG11GGGGG66"
    ,
    "66666BBBBBB666666BB6BB0BBBBB6BB6BBBBB0BBBBBBBBBBBB0BBBBBBBBBB0BBBBBBBB8BBB8BBBBBB6BB88BBB8B8BB6BB6B88888B888BB6BB6B8899889988B6BB6B8909889098B6B66B8899889988B6B66B8888888888B66688B88288288B886688B88822888B886677CB888888BC7766GGGG777777GGGG666GGGGG11GGGGG66"
    ,
    "66666BBBBBB666666BB6BB0BBBBB6BB6BBBBB0BBBBBBBBBBBB0BBBBBBBBBB0BBBBBBBB8BBB8BBBBBB6BB88BBB8B8BB6BB6B88888B888BB6BB6B8898888988B6BB6B8989889898B6B66B8888888888B6B66B8888888888B66688B88288288B886688B88822888B886677CB888888BC7766GGGG777777GGGG666GGGGG11GGGGG66"
    ,
    "6666666BBBB66666666BB00BBBB666666666B0BB0000BB666BBBB000BB00B666666B000B00BBBBB6BB00BBB0B00BBB6666BBBB000B00000BB00BBB00BBBBBB6666BBBBB00B0BBBBB6BBB00BB0000B666666B000BB000BBB666BB000BBB0BB66666BBBBBBB00BB66666666BBBB666BBB6BBB666666666666666666666666666BB"
    ,
    "62B662BB66BBBBB66BB222B6BB266B2662B662BB6B662BB66BBBBB26BB266B2662B662BB662B2BB66BB22B66BB266B2662BBBBB66B262BB6622266266222226662B662BB66BBBBB66BB222B6BB266B2662BB62BB6B662BB66BBBBB666BBBB2666662BB666B222BB66BB266B666BB26666662BB6662BBBBB66222222666222666"
  
  //梨子 26
  ,"BBBBFFFFFFFBBBBBBBBFFFFFFFFCFFBBBFFFFCFCFFFCFBBBBBFFFFFFFFFFFFFBBFFFFF888FF8FFBBBBFF88F88888FFFBBFF88888F888FF6BBF68899889988FFBBCF8909889098FFBBBF8899889988FFBBFF8888888888FBBBBFF88288288FFFBBFFF88822888CFBBBBFFF888888FFFFBBFFGG777777GFFFBBFFGGGG22GGGGGFB"
    ,
    "BBBBFFFFFFFBBBBBBBBFFFFFFFFCFFBBBFFFFCFCFFFCFBBBBBFFFFFFFFFFFFFBBFFFFF888FF8FFBBBBFF88F88888FFFBBFF88888F888FF6BBF68898888988FFBBCF8989889898FFBBBF8888888888FFBBFF8888888888FBBBBFF88288288FFFBBFFF88822888CFBBBBFFF888888FFFFBBFFGG777777GFFFBBFFGGGG22GGGGGFB"
    ,
    "662BBBB666BBBBB66BB222B662BB22666662BB666B662BB66BBBBB2666BB26666662BB66662B2BB66BB22B6666BB2666662BBBB66B262BB66222662662222266666BBBB66B662BB66BB26B26BB222B2662B662BB662B2BB66BBB2666BB266B2662B662BB666B2BB66BB22B66BB266B26662BBBB66B262BB66222662662222666"
    ,
    "77AAAAA777777777777777AAAAAAAAA77AAAAAAAAAAAA7777AAAAAAAAAAAAA777A7AAAAAAAAAAAAAA7AAAAAAAAAA7A77777A7AAAAAAAA7A7A7A7AAAAAAAA77777777AAAAAAA7A7AAAAA7A7AAAAAA7777777777AAA7A7AA7A777AA7A777AA77777777AAAAA7AA777777777AAAAA7A77777777A777AA777777777777A777777777"
  
  //ことり 30
  ,  "66666CCC66CCC66666C3CCCCCCCCC66666CCC0CC7C033C666337CCCCCCC7CC666CCCC8CCCC8CC3C6CCCC888888888CC66C8899889988CC0CCC6C8909889098C66C8899889988C6CCC66C888888888CC666C88288288C7C6CC6CCC88822888C6666CCD88888D7CC666CCCDDD0000DD7C66CCDDD22DD8DD6CCC66DD88DDDDDDDCC"
    ,
    "66666CCC66CCC66666C3CCCCCCCCC66666CCC0CC7C033C666337CCCCCCC7CC666CCCC8CCCC8CC3C6CCCC888888888CC66C8899888988CC0CCC6C8989889098C66C8899888888C6CCC66C888888888CC666C88288288C7C6CC6CCC88822888C6666CCD88888D7CC666CCCDDD0000DD7C66CCDDD22DD8DD6CCC66DD88DDDDDDDCC"
    ,
    "44444444444EEE44444EE444444444444444EEEEEEE44E4EEE4EEEEEEEEEE44444EEEEEEEEEEEEEE44EEE0EEEEE0EEE44EEE00EEEE00EEE44EEE00EEEE00EEE44EEE00EEEE00EEE44EEEEEEEEEEEEEE44E00EEEEEEEE00E44E00EEE00EEE00E44EEEEE00EEEEEEE444EEEEEE00EEEE44444EEEE00EEEE4444444EEEEEEEE4444"
    ,
    "3333373337737763367367366636636676376377637763633367773677367367763763776377736336637736773673677637763337736763667767776677766773337733337733373666373666376367763773776363776336773633336773677637776363637763367736366377736763337367637633377766776677676666"
  
};

WiFiServer server(80);


void setup() {
  //LEDの初期設定
  delay( 3000 ); // power-up safety delay
  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
  FastLED.setBrightness(50);

  //connectWiFi();
}

void connectWiFi(){  
//WiFi接続処理
    Serial.begin(115200);
    pinMode(5, OUTPUT);      // set the LED pin mode

    delay(10);

    // We start by connecting to a WiFi network

    Serial.println();
    Serial.println();
    Serial.print("Connecting to ");
    Serial.println(ssid);

    WiFi.begin(ssid);
    //WiFi.begin(ssid, password);

    int ct = 0;
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        ct++;
        Serial.print(".");
        if(ct>20){
          led_pt = 9;
          showLED();
          return;
          }
    }

    led_pt = 5;
    showLED();

    Serial.println("");
    Serial.println("WiFi connected.");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());
    
    server.begin();

}

int value = 0;

void checkWiFi(){
//WiFi経由のコマンド受付処理
  WiFiClient client = server.available();   // listen for incoming clients

  if (client) {                             // if you get a client,
    Serial.println("New Client.");           // print a message out the serial port
    String currentLine = "";                // make a String to hold incoming data from the client
    while (client.connected()) {            // loop while the client's connected
      if (client.available()) {             // if there's bytes to read from the client,
        char c = client.read();             // read a byte, then
        Serial.write(c);                    // print it out the serial monitor
        if (c == '\n') {                    // if the byte is a newline character

          // if the current line is blank, you got two newline characters in a row.
          // that's the end of the client HTTP request, so send a response:
          if (currentLine.length() == 0) {
            // HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)
            // and a content-type so the client knows what's coming, then a blank line:
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();
            client.print("TSUNAGARU-CONNECTED!<br>");
            client.print("led_mode = ");
            client.print(led_mode);
            client.print(" led_pt = ");
           client.print(led_pt);
           client.print("<BR>");
            
            // the content of the HTTP response follows the header:
          //  client.print("Click <a href=\"/H\">here</a> to turn the LED on pin 5 on.<br>");
          //  client.print("Click <a href=\"/L\">here</a> to turn the LED on pin 5 off.<br>");

           //client.print("Click <a href=\"/D1/AAAAAAAA00000000AAAAAAAA00000000AAAAAAAA00000000AAAAAAAA00000000\">here</a> for LED-DATA TEST1.<br>");

            // The HTTP response ends with another blank line:
            client.println();
            // break out of the while loop:
            break;
          } else {    // if you got a newline, then clear currentLine:
            currentLine = "";
          }
        } else if (c != '\r') {  // if you got anything else but a carriage return character,
          currentLine += c;      // add it to the end of the currentLine
        }

        if (currentLine.startsWith("GET /S")) {
          int d = currentLine.charAt(6)-'0';
          Serial.println(""); 
          Serial.print("S = "); 
          Serial.println(d); 
          if(d==0){d=10;}
          FastLED.setBrightness(20*d);
        }
        //int led_mode = 2;//LEDの動作モード（0:手動,1:璃奈＋ボードオート,2:全種オート）
        else if (currentLine.endsWith("GET /R")) {
          led_mode = 1;             
        }
        else if (currentLine.endsWith("GET /M")) {
          led_mode = 0;             
        }
        else if (currentLine.endsWith("GET /A")) {
          led_mode = 2;             
        }
        //int led_pt = 4;//選択中のLEDパターン
        else if (currentLine.endsWith("GET /F0")) {
          led_pt = 0;
          }
        else if (currentLine.endsWith("GET /F1")) {
          led_pt = 4;
          }
        else if (currentLine.endsWith("GET /F2")) {
          led_pt = 5;
          }
        else if (currentLine.endsWith("GET /F3")) {
          led_pt = 6;
          }
        else if (currentLine.endsWith("GET /F4")) {
          led_pt = 7;
          }
        else if (currentLine.endsWith("GET /F5")) {
          led_pt = 8;
          }
        else if (currentLine.endsWith("GET /F6")) {
          led_pt = 9;
          }
        else if (currentLine.endsWith("GET /F7")) {
          led_pt = 10;
          }
        else if (currentLine.endsWith("GET /F8")) {
          led_pt = 11;
          }
        else if (currentLine.endsWith("GET /F9")) {
          led_pt = 12;
          }
        else if (currentLine.endsWith("GET /F10")) {
          led_pt = 13;
          }
        else if (currentLine.endsWith("GET /F11")) {
          led_pt = 14;
          }
        else if (currentLine.endsWith("GET /F12")) {
          led_pt = 15;
          }
        else if (currentLine.endsWith("GET /F13")) {
          led_pt = 16;
          }
        else if (currentLine.endsWith("GET /rina")) {
          led_pt = 0;
          }  
        else if (currentLine.endsWith("GET /ruby")) {
          led_pt = 22;
          }  
        else if (currentLine.endsWith("GET /kotori")) {
          led_pt = 30;
          }
        else if (currentLine.endsWith("GET /sumire")) {
          led_pt = 17;
          }    
        else if (currentLine.endsWith("GET /riko")) {
          led_pt = 26;
          }  
        
        // Check to see if the client request was "GET /H" or "GET /L":
       /* if (currentLine.endsWith("GET /H")) {
          digitalWrite(5, HIGH);               // GET /H turns the LED on
        }
        if (currentLine.endsWith("GET /L")) {
          digitalWrite(5, LOW);                // GET /L turns the LED off
        }
        if (currentLine.startsWith("GET /T")) {
          int d = currentLine.charAt(6)-'0';
          Serial.println(""); 
          Serial.print("d = "); 
          Serial.println(d); 
          for(int i=0; i<64 ;i++){
            data[d][i]=currentLine.charAt(i+9);
          }
        }
        if (currentLine.startsWith("GET /D1/")) {
          for(int i=0; i<64 ;i++){
            data[0][i]=currentLine.charAt(i+8);
          }
        }
        if (currentLine.startsWith("GET /D2/")) {
          for(int i=0; i<64 ;i++){
            data[1][i]=currentLine.charAt(i+8);
          }
        }
        if (currentLine.startsWith("GET /D3/")) {
          for(int i=0; i<64 ;i++){
            data[2][i]=currentLine.charAt(i+8);
          }
        }
        if (currentLine.startsWith("GET /D4/")) {
          for(int i=0; i<64 ;i++){
            data[3][i]=currentLine.charAt(i+8);
          }
        }*/
      }
    }
    // close the connection:
    client.stop();
    Serial.println("Client Disconnected.");
  }
}

void loop(){
//WiFiからのコマンド受付
 checkWiFi();
 
 showLED();
}

void showLED(){
  int last_pt = PT_NUM;

  //LEDの動作モード（0:手動,1:璃奈＋ボードオート,2:全種オート）
  if(led_mode == 0){
     setLED(led_pt); 
     return;
    }
  else if(led_mode == 1){
    last_pt = 16;
    } 
  
  int k = 0;
  //while (true) 
  for(int k=0;k<last_pt;k++){   
    setLED(k); 
    for(int l=0;l<1000;l++){
      checkWiFi();
    }
    delay(2000);
    /*k = k + 1;
    if (k == last_pt) {
      k = 0;
    }*/
  }
}

void setLED(int k){
  for (int i = 0 ; i < NUM_LEDS ; i++) {
   if (data[k][i] == '0') {
        leds[i] = led_0;
      }
      else if (data[k][i] == '1') {
        leds[i] = led_1;
      }
      else if (data[k][i] == '2') {
        leds[i] = led_2;
      }
      else if (data[k][i] == '3') {
        leds[i] = led_3;
      }
      else if (data[k][i] == '4') {
        leds[i] = led_4;
      }
      else if (data[k][i] == '5') {
        leds[i] = led_5;
      }
      else if (data[k][i] == '6') {
        leds[i] = led_6;
      }
      else if (data[k][i] == '7') {
        leds[i] = led_7;
      }
      else if (data[k][i] == '8') {
        leds[i] = led_8;
      }
      else if (data[k][i] == '9') {
        leds[i] = led_9;
      }
      else if (data[k][i] == 'A') {
        leds[i] = led_A;
      }
      else if (data[k][i] == 'B') {
        leds[i] = led_B;
      }
      else if (data[k][i] == 'C') {
        leds[i] = led_C;
      }
      else if (data[k][i] == 'D') {
        leds[i] = led_D;
      }
      else if (data[k][i] == 'E') {
        leds[i] = led_E;
      }
      else if (data[k][i] == 'F') {
        leds[i] = led_F;
      }
      else if (data[k][i] == 'G') {
        leds[i] = led_G;
      }
      else {
        leds[i] = ledWhite;
      }
    }
    FastLED.show();
  }
